# Generated by Django 2.2.10 on 2020-03-07 01:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MaterialCamera',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.CharField(help_text='device', max_length=30, verbose_name='device')),
                ('version', models.CharField(help_text='version', max_length=200, verbose_name='version')),
                ('environment', models.CharField(help_text='environment', max_length=200, verbose_name='environment')),
                ('add_time', models.DateTimeField(auto_now_add=True, help_text='Add Time', null=True, verbose_name='Add Time')),
            ],
            options={
                'verbose_name': 'Camera Model',
                'verbose_name_plural': 'Camera Modellist',
            },
        ),
        migrations.CreateModel(
            name='MaterialCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='category name', max_length=30, verbose_name='category name')),
                ('en_name', models.CharField(blank=True, help_text='English name', max_length=30, null=True, verbose_name='English name')),
                ('category_type', models.CharField(choices=[('posts', 'Posts category'), ('posts/category', 'Posts category'), ('albums', 'Atlas total classification'), ('albums/category', 'Atlas classification'), ('movies', 'Movie Category'), ('movies/category', 'Movie Category'), ('readings', 'Reading Category'), ('readings/category', 'readings'), ('books', 'General Books'), ('books/category', 'Books/category'), ('book/notes', 'Total Reading Notes Category'), ('book/notes/category', 'Reading Notes Category')], help_text='for configuring route redirection', max_length=30, verbose_name='route encoding')),
                ('desc', models.TextField(blank=True, help_text='category description', null=True, verbose_name='category description')),
                ('en_desc', models.TextField(blank=True, help_text='category description', null=True, verbose_name='category description')),
                ('image', models.ImageField(blank=True, help_text='picture', null=True, upload_to='comment/category/image/%Y/%m')),
                ('category_level', models.CharField(choices=[('1', 'First Class'), ('2', 'secondary category'), ('3', 'tertiary category')], help_text='Category level', max_length=20, verbose_name='Category level')),
                ('is_active', models.BooleanField(default=True, help_text='is active', verbose_name='is active')),
                ('is_tab', models.BooleanField(default=True, help_text='whether to navigate', verbose_name='whether to navigate')),
                ('index', models.IntegerField(default=0, help_text='sort', verbose_name='sort')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='Add Time')),
                ('parent_category', models.ForeignKey(blank=True, help_text='parent category', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_category', to='material.MaterialCategory', verbose_name='parent category level')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categorylist',
            },
        ),
        migrations.CreateModel(
            name='MaterialLicense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='copyright name', max_length=30, verbose_name='copyright name')),
                ('en_name', models.CharField(blank=True, help_text='English name', max_length=30, null=True, verbose_name='English name')),
                ('desc', models.CharField(blank=True, help_text='Introduction', max_length=255, null=True, verbose_name='Introduction')),
                ('en_desc', models.CharField(blank=True, help_text='Introduction', max_length=255, null=True, verbose_name='Introduction')),
                ('link', models.URLField(blank=True, help_text='copyright reference link', null=True, verbose_name='copyright reference link')),
                ('color', models.CharField(choices=[('# 878D99', 'gray'), ('# 409EFF', 'blue'), ('# 67C23A', 'green'), ('# EB9E05', 'Yellow'), ('# FA5555', 'Red')], default='blue', help_text='color', max_length=20, verbose_name='color')),
                ('add_time', models.DateTimeField(auto_now_add=True, help_text='Add Time', null=True, verbose_name='Add Time')),
            ],
            options={
                'verbose_name': 'Authorization',
                'verbose_name_plural': 'Authorizationlist',
            },
        ),
        migrations.CreateModel(
            name='MaterialMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='name', max_length=30, verbose_name='name')),
                ('en_name', models.CharField(blank=True, help_text='name', max_length=30, null=True, verbose_name='name')),
                ('desc', models.CharField(blank=True, help_text='Introduction', max_length=100, null=True, verbose_name='Introduction')),
                ('en_desc', models.CharField(blank=True, help_text='Introduction', max_length=100, null=True, verbose_name='Introduction')),
                ('image', models.ImageField(blank=True, help_text='picture', null=True, upload_to='comment/master/image/%y/%m', verbose_name='picture')),
                ('url', models.URLField(help_text='link', verbose_name='link')),
                ('experience', models.FloatField(default=0, help_text='Proficiency', verbose_name='Proficiency')),
                ('add_time', models.DateTimeField(auto_now_add=True, help_text='Add Time', null=True, verbose_name='Add Time')),
            ],
            options={
                'verbose_name': 'Skill',
                'verbose_name_plural': 'Skilllist',
            },
        ),
        migrations.CreateModel(
            name='MaterialSocial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='name', max_length=30, verbose_name='name')),
                ('en_name', models.CharField(blank=True, help_text='name', max_length=30, null=True, verbose_name='name')),
                ('desc', models.CharField(help_text='Introduction', max_length=100, verbose_name='Introduction')),
                ('en_desc', models.CharField(blank=True, help_text='Introduction', max_length=100, null=True, verbose_name='Introduction')),
                ('image', models.ImageField(blank=True, help_text='picture', null=True, upload_to='commentsocial/image/%y/%m', verbose_name='picture')),
                ('url', models.URLField(help_text='link', verbose_name='link')),
                ('add_time', models.DateTimeField(auto_now_add=True, help_text='Add Time', null=True, verbose_name='Add Time')),
            ],
            options={
                'verbose_name': 'Social Platform',
                'verbose_name_plural': 'Social Platformlist',
            },
        ),
        migrations.CreateModel(
            name='MaterialTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='tag name', max_length=30, verbose_name='tag name')),
                ('en_name', models.CharField(blank=True, help_text='English name', max_length=30, null=True, verbose_name='English name')),
                ('color', models.CharField(default='blue', help_text='color', max_length=20, verbose_name='color')),
                ('add_time', models.DateTimeField(auto_now_add=True, help_text='Add Time', null=True, verbose_name='Add Time')),
                ('category', models.ForeignKey(blank=True, help_text='category', null=True, on_delete=django.db.models.deletion.CASCADE, to='material.MaterialCategory', verbose_name='category')),
            ],
            options={
                'verbose_name': 'Label',
                'verbose_name_plural': 'Labellist',
            },
        ),
        migrations.CreateModel(
            name='PostBaseInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='title', max_length=100, verbose_name='title')),
                ('en_title', models.CharField(blank=True, help_text='English title', max_length=100, null=True, verbose_name='English title')),
                ('desc', models.CharField(blank=True, help_text='Introduction', max_length=255, null=True, verbose_name='Introduction')),
                ('en_desc', models.CharField(blank=True, help_text='English introduction', max_length=255, null=True, verbose_name='English introduction')),
                ('author', models.CharField(blank=True, help_text='author', max_length=20, null=True, verbose_name='author')),
                ('post_type', models.CharField(blank=True, choices=[('post', 'post'), ('album', 'Atlas'), ('movie', 'movie'), ('book', 'Book'), ('book/note', 'book note')], help_text='POST category', max_length=20, null=True, verbose_name='POST category')),
                ('click_num', models.IntegerField(default=0, help_text='clicks', verbose_name='clicks')),
                ('like_num', models.IntegerField(default=0, help_text='Number of Likes', verbose_name='Number of Likes')),
                ('comment_num', models.IntegerField(default=0, help_text='Number of Comments', verbose_name='Number of Comments')),
                ('front_image', models.ImageField(blank=True, help_text='big picture 833 *217, small picture 243 *207', null=True, upload_to='post/image/%y/%m', verbose_name='cover image')),
                ('front_image_type', models.CharField(choices=[('0', 'None'), ('1', 'Small Picture'), ('2', 'big picture')], default='0', help_text='cover art category', max_length=20, verbose_name='cover image category')),
                ('is_hot', models.BooleanField(default=False, help_text='is it hot', verbose_name='is it hot')),
                ('is_recommend', models.BooleanField(default=False, help_text='Recommended', verbose_name='Recommended')),
                ('is_banner', models.BooleanField(default=False, help_text='is it Banner', verbose_name='is it Banner')),
                ('is_active', models.BooleanField(default=True, help_text='is active', verbose_name='is active')),
                ('is_commentable', models.BooleanField(default=True, help_text='Can comment', verbose_name='Can comment')),
                ('browse_password', models.CharField(blank=True, help_text='browse password', max_length=20, null=True, verbose_name='browse password')),
                ('browse_password_encrypt', models.CharField(blank=True, help_text='Browse password encryption', max_length=100, null=True, verbose_name='Browse password encryption')),
                ('index', models.IntegerField(default=0, help_text='Sticked', verbose_name='Sticked')),
                ('add_time', models.DateTimeField(blank=True, help_text='Add Time', null=True, verbose_name='Add Time')),
                ('category', models.ForeignKey(help_text='category', on_delete=django.db.models.deletion.CASCADE, to='material.MaterialCategory', verbose_name='category')),
                ('license', models.ForeignKey(blank=True, help_text='copyright', null=True, on_delete=django.db.models.deletion.CASCADE, to='material.MaterialLicense', verbose_name='copyright')),
            ],
            options={
                'verbose_name': 'All blog posts',
                'verbose_name_plural': 'All blog postslist',
            },
        ),
        migrations.CreateModel(
            name='PostTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_time', models.DateTimeField(auto_now_add=True, help_text='Add Time', null=True, verbose_name='Add Time')),
                ('post', models.ForeignKey(help_text='post', on_delete=django.db.models.deletion.CASCADE, to='material.PostBaseInfo', verbose_name='post')),
                ('tag', models.ForeignKey(help_text='tag', on_delete=django.db.models.deletion.CASCADE, to='material.MaterialTag', verbose_name='tag')),
            ],
            options={
                'verbose_name': 'Label',
                'verbose_name_plural': 'Labellist',
            },
        ),
        migrations.AddField(
            model_name='postbaseinfo',
            name='tags',
            field=models.ManyToManyField(through='material.PostTag', to='material.MaterialTag'),
        ),
        migrations.CreateModel(
            name='MaterialPicture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='title', max_length=100, verbose_name='title')),
                ('en_title', models.CharField(blank=True, help_text='subtitle', max_length=100, null=True, verbose_name='subtitle')),
                ('desc', models.CharField(blank=True, help_text='Introduction', max_length=255, null=True, verbose_name='Introduction')),
                ('en_desc', models.CharField(blank=True, help_text='Summary', max_length=255, null=True, verbose_name='Summary')),
                ('image', models.ImageField(blank=True, help_text='picture', null=True, upload_to='comment/picture/image/%Y/%m', verbose_name='picture')),
                ('link', models.URLField(blank=True, help_text='link', null=True, verbose_name='link')),
                ('add_time', models.DateTimeField(auto_now_add=True, help_text='Add Time', null=True, verbose_name='Add Time')),
                ('camera', models.ForeignKey(blank=True, help_text='shooting camera', null=True, on_delete=django.db.models.deletion.CASCADE, to='material.MaterialCamera', verbose_name='shooting camera')),
            ],
            options={
                'verbose_name': 'Picture',
                'verbose_name_plural': 'Picturelist',
            },
        ),
        migrations.CreateModel(
            name='MaterialBanner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='title', max_length=100, verbose_name='title')),
                ('en_title', models.CharField(blank=True, help_text='title', max_length=100, null=True, verbose_name='title')),
                ('image', models.ImageField(blank=True, help_text='picture', null=True, upload_to='comment/banner/image/%y/%m', verbose_name='picture')),
                ('url', models.URLField(help_text='link', verbose_name='link')),
                ('index', models.IntegerField(default=0, help_text='order', verbose_name='order')),
                ('add_time', models.DateTimeField(auto_now_add=True, help_text='Add Time', null=True, verbose_name='Add Time')),
                ('category', models.ForeignKey(default='1', help_text='category', on_delete=django.db.models.deletion.CASCADE, to='material.MaterialCategory', verbose_name='category')),
            ],
            options={
                'verbose_name': 'Carousel',
                'verbose_name_plural': 'Carousellist',
            },
        ),
    ]
