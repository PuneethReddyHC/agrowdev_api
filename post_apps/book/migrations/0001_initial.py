# Generated by Django 2.2.10 on 2020-03-07 01:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('material', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BookInfo',
            fields=[
                ('postbaseinfo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='material.PostBaseInfo')),
                ('book_image', models.ImageField(blank=True, help_text='big picture 833 *217, small picture 243 *207', null=True, upload_to='book/image/%y/%m', verbose_name='cover image')),
                ('is_reading', models.BooleanField(default=False, help_text='Whether reading', verbose_name='Whether reading')),
                ('read_precentage', models.FloatField(blank=True, default=0.0, help_text='Reading progress', null=True, verbose_name='Reading progress')),
                ('douban_type', models.CharField(blank=True, choices=[('book', 'Book'), ('movie', 'movie')], help_text='Douban Resource Type', max_length=255, null=True, verbose_name='Douban resource type')),
                ('douban_id', models.CharField(blank=True, help_text='douban resource ID', max_length=255, null=True, verbose_name='douban resource ID')),
                ('douban_infos', models.TextField(blank=True, help_text='Douban Information', null=True, verbose_name='Douban Information')),
                ('book_isbn10', models.CharField(blank=True, help_text='isbn10', max_length=255, null=True, verbose_name='isbn10')),
                ('book_isbn13', models.CharField(blank=True, help_text='isbn13', max_length=255, null=True, verbose_name='isbn13')),
                ('book_name', models.CharField(blank=True, help_text='Book Name', max_length=255, null=True, verbose_name='Book Name')),
                ('book_origin_name', models.CharField(blank=True, help_text='book original name', max_length=100, null=True, verbose_name='book original name')),
                ('book_author', models.CharField(blank=True, help_text='Book Author', max_length=255, null=True, verbose_name='Book Author')),
                ('book_tags', models.CharField(blank=True, help_text='book tags', max_length=255, null=True, verbose_name='book tags')),
                ('book_rating', models.CharField(blank=True, help_text='Book Douban Rating', max_length=10, null=True, verbose_name='Book Douban Rating')),
                ('book_publisher', models.CharField(blank=True, help_text='publisher', max_length=255, null=True, verbose_name='publisher')),
                ('publish_date', models.CharField(blank=True, help_text='Publish Date', max_length=30, null=True, verbose_name='Publish Date')),
                ('book_pages', models.CharField(blank=True, help_text='total pages', max_length=20, null=True, verbose_name='total pages')),
                ('book_url', models.URLField(blank=True, help_text='Book Douban Link', null=True, verbose_name='Book Douban Link')),
                ('book_api', models.URLField(blank=True, help_text='Book API Link', null=True, verbose_name='Book API Link')),
                ('is_update_douban_info', models.BooleanField(default=False, help_text='It will automatically update all unfilled Douban information', verbose_name='Whether to update')),
            ],
            options={
                'verbose_name': 'Book',
                'verbose_name_plural': 'Booklist',
            },
            bases=('material.postbaseinfo',),
        ),
        migrations.CreateModel(
            name='BookResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('download', models.FileField(upload_to='book/resource/%Y/%m', verbose_name='resource file')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='Add time')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book.BookInfo', verbose_name='Book')),
            ],
            options={
                'verbose_name': 'Book Resources',
                'verbose_name_plural': 'Book Resources',
            },
        ),
        migrations.CreateModel(
            name='BookNoteInfo',
            fields=[
                ('postbaseinfo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='material.PostBaseInfo')),
                ('chapter', models.CharField(default='', help_text='own chapter', max_length=20, verbose_name='chapter')),
                ('note_type', models.CharField(blank=True, choices=[('1', 'level 1'), ('2', 'Secondary'), ('3', 'third level')], help_text='note level', max_length=20, null=True, verbose_name='note level')),
                ('is_reading', models.BooleanField(default=False, help_text='Whether reading', verbose_name='Whether reading')),
                ('is_completed', models.BooleanField(default=False, help_text='Are you finished reading', verbose_name='Are you finished reading')),
                ('is_noted', models.BooleanField(default=False, help_text='note completed?', verbose_name='note completed?')),
                ('book', models.ForeignKey(blank=True, help_text='Book', null=True, on_delete=django.db.models.deletion.CASCADE, to='book.BookInfo', verbose_name='Book')),
                ('parent_note', models.ForeignKey(blank=True, help_text='parent note', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_note', to='book.BookNoteInfo', verbose_name='parent note')),
            ],
            options={
                'verbose_name': 'Book Notes',
                'verbose_name_plural': 'Book Noteslist',
            },
            bases=('material.postbaseinfo',),
        ),
        migrations.CreateModel(
            name='BookNoteDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(blank=True, choices=[('CN', 'Chinese'), ('EN', 'English')], help_text='two language categories are now available', max_length=5, null=True, verbose_name='post details language category')),
                ('origin_content', models.TextField(help_text='original content', verbose_name='original content')),
                ('formatted_content', models.TextField(help_text='processed content', verbose_name='processed content')),
                ('add_time', models.DateTimeField(blank=True, help_text='Add Time', null=True, verbose_name='Add Time')),
                ('update_time', models.DateTimeField(blank=True, help_text='modification time', null=True, verbose_name='modification time')),
                ('book_note_info', models.ForeignKey(blank=True, help_text='content', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='details', to='book.BookNoteInfo', verbose_name='content')),
            ],
            options={
                'verbose_name': 'Book Note Details',
                'verbose_name_plural': 'Book Note Detailslist',
            },
        ),
        migrations.CreateModel(
            name='BookDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(blank=True, choices=[('CN', 'Chinese'), ('EN', 'English')], help_text='two language categories are now available', max_length=5, null=True, verbose_name='post details language category')),
                ('origin_content', models.TextField(help_text='original content', verbose_name='original content')),
                ('formatted_content', models.TextField(help_text='processed content', verbose_name='processed content')),
                ('add_time', models.DateTimeField(blank=True, help_text='Add Time', null=True, verbose_name='Add Time')),
                ('update_time', models.DateTimeField(blank=True, help_text='modification time', null=True, verbose_name='modification time')),
                ('book_info', models.ForeignKey(blank=True, help_text='content', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='details', to='book.BookInfo', verbose_name='content')),
            ],
            options={
                'verbose_name': 'Book Details',
                'verbose_name_plural': 'Book Detailslist',
            },
        ),
    ]
